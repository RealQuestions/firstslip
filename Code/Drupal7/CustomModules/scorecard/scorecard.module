<?php

/**
 * utilise the default views shipped along with the code
 */
function scorecard_views_api() {
  return array(
    'api' => 3.0,
    'path' => drupal_get_path('module', 'scorecard') . '/views',  
  );
}

function scorecard_help($path, $arg)
  {
    switch ($path)
    {
        case 'scorecard':
            return t('Scorecard System for RealQuestions, Uses the comments,answers, clarity rating to generate a report card');
    }
  }

/**
 * http://drupal.org/node/1261744 : for more on entity, bundle, entity_type, fields
 */
function scorecard_entity_info() {
  /* Entity Type */
  $return = array(
    'scorecard' => array(
      'label' => t('Scores'),
      'entity class' => 'ScorecardClass',
      'controller class' => 'ScorecardController',
      'base table' => 'scorecard',
      'fieldable' => TRUE,
      'entity keys' => array(
        'id' => 'pid',
        'bundle' => 'name',
      ),
      'bundles' => array(),
      'bundle keys' => array(
        'bundle' => 'name',
      ),
      'load hook' => 'scorecard_load',
      'view modes' => array(
        'full' => array(
          'label' => t('Default'),
          'custom settings' => FALSE,
        ),
      ),
      'label callback' => 'entity_class_label',
      'uri callback' => 'entity_class_uri',
      'module' => 'scorecard',
      'access callback' => 'scorecard_access_entity',
      
    ),
  );
  /* Bundle */
    $return['scorecard_type'] = array(
      'label' => t('Scorecard Type'),
      'entity class' => 'ScorecardClassType',
      'controller class' => 'ScorecardTypeController',
      'base table' => 'scorecard_type',
      'fieldable' => TRUE,
      'bundle of' => 'scorecard',
      'exportable' => TRUE,
      'entity keys' => array(
        'id' => 'polid',
        'name' => '  name',
        'label' => 'label',
      ),
      'module' => 'scorecard',
      'access callback' => 'scorecard_access_entity',
      // Enable the entity API's admin UI.
      /*'admin ui' => array(
        'path' => 'admin/structure/task-types',
        'file' => 'example_task.admin.inc',
        'controller class' => 'ExampleTaskTypeUIController',
      ),*/
  );
  
  return $return;
}

function scorecard_access_entity($op, $entity, $account, $entity_type) {
/*
 *http://drupal.org/node/1520010
 */
 
  return TRUE; 
}


/**
 * Implements hook_entity_info_alter().
 *
 * We are adding the info about the model types via a hook to avoid a recursion
 * issue as loading the model types requires the entity info as well.
 *
 * @todo This needs to be improved
 */
#function scorecard_entity_info_alter(&$entity_info) {
#  foreach (model_get_types() as $type => $info) {
#    $entity_info['scorecard']['bundles'][$type] = array(
#      'label' => $info->label,
##      'admin' => array(
##        'path' => 'admin/structure/model_types/manage/%model_type',
##        'real path' => 'admin/structure/model_types/manage/' . $type,
##        'bundle argument' => 4,
##        'access arguments' => array('administer model types'),
##      ),
#    );
#  }
#}
  
 function scorecard_menu()
  {
    $items['scorecard_builder'] = array(
        'title' => 'Scorecard',
        //'type' => 'MENU_NORMAL_ITEM',
        'description' => 'Scorecard System for Politicians, using a combination of Questions Answered, and comments, clarity scale',
        'page callback' => '_scorecard',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'expanded' => TRUE
    );

    return $items;
  }
  
class ScorecardClass extends Entity {
  protected function defaultLabel() {
    return $this->title;
  }
} 

class ScorecardController extends EntityAPIController {
  public function create(array $values = array()) {
    global $user;
    $values += array(
      'title' => '',
      'description' => 'Name',
      'created' => REQUEST_TIME,
      'changed' => REQUEST_TIME,
      'uid' => $user->uid,
    );
    return parent::create($values);
  }
  
    public function buildContent($entity, $view_mode = 'full', $langcode = NULL, $content = array()) {
    $wrapper = entity_metadata_wrapper('scorecard', $entity);
/*    $content['author'] = array('#markup' => t('Created by: !author', array('!author' => $wrapper->uid->name->value(array('sanitize' => TRUE)))));

    // Make Description and Status themed like default fields.
    $content['party'] = array(
      '#theme' => 'field',
      '#weight' => 0,
      '#title' =>t('Party Membership'),
      '#access' => TRUE,
      '#label_display' => 'above',
      '#view_mode' => 'full',
      '#language' => LANGUAGE_NONE,
      '#field_name' => 'field_fake_description',
      '#field_type' => 'text',
      '#entity_type' => 'scorecard',
      '#bundle' => $entity->type,
      '#items' => array(array('value' => $entity->party)),
      '#formatter' => 'text_default',
      0 => array('#markup' => check_plain($entity->party))
    );
*/
    return parent::buildContent($entity, $view_mode, $langcode, $content);
  }
  
}


/**
* Task Type class.
*/
class ScorecardClassType extends Entity {
  public $type;
  public $label;
  public $weight = 0;

  public function __construct($values = array()) {
    parent::__construct($values, 'scorecard_type');
  }

  function isLocked() {
    return isset($this->status) && empty($this->is_new) && (($this->status & ENTITY_IN_CODE) || ($this->status & ENTITY_FIXED));
  }
}

class ScorecardTypeController extends EntityAPIControllerExportable {
   public function create(array $values = array()) {
    $values += array(
      'label' => '',
      'description' => '',
    );
    return parent::create($values);
  }

  /**
   * Save Task Type.
   */
  public function save($entity, DatabaseTransaction $transaction = NULL) {
    parent::save($entity, $transaction);
    // Rebuild menu registry. We do not call menu_rebuild directly, but set
    // variable that indicates rebuild in the end.
    // @see _http://drupal.org/node/1399618
    variable_set('menu_rebuild_needed', TRUE);
  }
}

function _scorecard($arg1)
  { 
  /* Performance Notes/Ideas:
     1) Look at field suppress
     2) ReDo logic to add fields/tables to the view ?
     3) Store and Display Table of Data instead of cached views -- PreCalc Table Entity model being used 
     4) Look into why view is errorneous when cache is enabled below, verify
  */
  db_truncate('scorecard')->execute();
  
    $output = 'Scorecard';
    /* Needs to be calculated at Run time, cache gives FALSE data--
    //$output =& drupal_static(__FUNCTION__);
    if (!isset($output))
      {
        if ($cache = cache_get('scorecard'))
          {
            $output = $cache->data;
          }
        else
          {
	*/
            $header = array(
                array(
                    'data' => t('Politician')
                ),
                array(
                    'data' => t('Party')
                ),
                array(
                    'data' => t('# Qsts'),
                    'sort' => 'desc'
                ),
                array(
                    'data' => t('# Ans')
                ),
                array(
                    'data' => t('Comments')
                ),
                array(
                    'data' => t('Avg')
                ),
                array(
                    'data' => t('Score')
                )
            );
            $output = array(
                'header' => $header
            );
            
            
            $flag = flag_get_flag('like');

            /* Level 1 : Basic view, Politician & Party Membership */
            $view   = views_get_view('scorecard_l1', FALSE); // default, false: use cache
            $view->set_display('Page');
  	        //$view->set_arguments(array($arg1));
            $view->execute();

            //$output['rows'][] = _scorecard_tableformater('','','','','','');
            
            /* Level 2 : count # Questions

            Using the field_userreference, fire the questions view
            
            [_field_data][field_field_userreference]
            // User ID of the politician picked up from the field.
            print_r ($view->result[0]->_field_data[nid][entity]->field_userreference[und][0][uid]);
            
            */

            foreach ($view->result as $key => $viewvalue)
              {
                $name          = $view->render_field('field_userreference', $key);
                $parties       = $view->render_field('field_parties', $key);
                $polid         = $viewvalue->_field_data['nid']['entity']->field_userreference['und'][0]['uid'];
                $viewquestions = views_get_view('scorecard_l2', FALSE); // default, false: use cache
                $viewquestions->set_arguments(array(
                    $polid
                ));
                $viewquestions->execute();

                /* Level 3 : # of answers, vote avg, #comments
		Using nid from questions, get the # ans for that politician */
                foreach ($viewquestions->result as $anskey => $ansviewvalue)
                  {
                    $ansid   = $ansviewvalue->nid;
                    $viewans = views_get_view('scorecard_l3', FALSE); // default, false: use cache
                    $viewans->set_arguments(array(
                        $ansid
                    ));
                    $viewans->set_display('attachment_1');
                    $viewans->execute();
                     
          		    $ansamt = count($viewans->result);
            		    
           		    if ($ansamt > 0) {
             		    $viewansrate     = $viewans->result[0]->_field_data['field_field_vote'][0]['raw']['average'];
                      $viewanscomments = $viewans->result[0]->_field_data['nid']['entity']->comment_count;
                      $support = $flag->get_count($viewans->result[0]->_field_data['nid']['entity']->field_question_nr['und'][0]['nid']);
            		    
            		    }
//                    print $ansamt .'{'. $ansid.'}';
                    /*
                    Only One answer per Question, hardcoding this to first item only. No Iteration.
                    */
                    
                  }
                if (!isset($viewansrate))
                  {
                    $viewansrate = "0";
                  }
                if (!isset($viewanscomments))
                  {
                    $viewanscomments = "0";
                  }
                if (!isset($ansamt))
                  {
                    $ansamt = "0";
                  }
                if (!isset($support))
                  {
                    $support = "0";
                  }
                  
                $output['rows'][] = _scorecard_tableformater($name, $parties, count($viewquestions->result), $ansamt, $viewanscomments, $viewansrate / 10, 0);

                // Save this in the entity scorecard
                $scoreentity = array('name'=> strip_tags($name),
                      'uid'=> $polid, 
                      'polname'=>$name,
                      'party'=>strip_tags($parties),
                      'questions' => count($viewquestions->result),
                      'answers' => $ansamt,
                      'comments' => $viewanscomments,
                      'rating' => $viewansrate/10,
                      'score' => $viewansrate * $ansamt,
                      'support' => $support);

              _scorecard_entity_save($scoreentity);
  
                $viewansrate      = 0;
                $viewanscomments  = 0;
              }
              
            // Offset for Paging
            
            /*
            $view->display['block']->display_options['pager']['options']['offset'] = 'OFFSET NUMBER';
            */
            // sorting on Custom Table
            // http://api.drupal.org/api/drupal/includes!tablesort.inc/7 tablesort without query, its not automatic, so need to call the api manually.
            //http://drupal.stackexchange.com/questions/14889/can-tablesort-be-used-without-a-query
            //cache_set('scorecard', $output, 'cache');
          //}
      //}
    //$output['pager'] = array('#theme' => 'pager');
    //$glossary = _glossarykeys('scorecard_mod');
    //$output['content'] = $glossary;

    return theme('scorecard', array(
        'output' => $output,
    ));
  }
/* format as an array to render this as a table from the custom template in this module */
function _scorecard_tableformater($namelist, $parties, $viewquestions = 0, $viewans = 0, $viewanscomments = 0, $viewansrate = 0, $score = 0)
  {
    // $score_ans = (int)str_replace('%', '', $viewansrate);
    // print "| $viewansrate $score_ans|";
    // print (float)$score_ans;
    // print "| $score_int $val ($score_int*$val) |";
    $table = array(
        array(
            'data' => $namelist
        ),
        array(
            'data' => $parties
        ),
        array(
            'data' => $viewquestions
        ),
        array(
            'data' => $viewans
        ),
        array(
            'data' => $viewanscomments
        ),
        array(
            'data' => $viewansrate
        ),
        array(
            'data' => (int) $viewans * (float) $viewansrate
        )
    );
    return $table;
  }
/* Hook_theme : define a custom template to customise view */
function scorecard_theme($existing, $type, $theme, $path)
  {
    return array(
        'scorecard' => array(
            'template' => 'scorecard',
            'path' => drupal_get_path('module', 'scorecard') . '/theme',
            'variables' => array(
                'output' => NULL
            )
        )
    );
  }
  
function _scorecard_entity_save($data) {

      $entity = entity_create('scorecard', $data);
      entity_save('scorecard', $entity);

      return NULL;
}

/* using a custom multi combined views, so cant used the defualt glossary methods.  Quick override, need to eval this in detail later  : + Jquery Ctools usage
function _glossarykeys($urlpath) {

  $keys = array('All','a','b','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z');

  foreach($keys as $keyval) {
    $glossary .= ' | ' . l($keyval,$urlpath . '/'. $keyval,array('attributes'=> array('class'=>'glossary')));
  }

  return $glossary;
}*/
